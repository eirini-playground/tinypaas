run:
  # increase timeout for cases when tests run in parallel with linters
  timeout: 20m
  # which dirs to skip: they won't be analyzed;
  skip-dirs:
    - vendor
    - pkg
  modules-download-mode: vendor

linters-settings:
  govet:
    # report about shadowed variables
    check-shadowing: true
  gocyclo:
    # minimal code complexity to report
    min-complexity: 10
  maligned:
    # print struct with more effective memory layout
    suggest-new: true
  lll:
    line-length: 512

linters:
  enable-all: true
  disable:
    # funlen is annoying
    - funlen
    # goerr113 requires to not use errors.New, instead it wants us to define
    # package-level errors and wrap them. This feels to be an overkill so we
    # are skipping it for now.
    - goerr113
    # noctx requires using a context when constructing an http.Request.
    # However, as for the time being we are not passing contexts to our
    # functions, so just using `context.Background` to make the linter happy
    # does not really make sense
    - noctx
    # godot requires that top-level comments end with a dot. This is useful for
    # documentation purposes when documentation is generated automatically.
    # However, we do not document our code and therefore this linter has no
    # value for us.
    - godot
    # gofumpt also includes gofumports. These are a stricter version of gofmt
    # and goimports respectively. By enabling them we also wanted to include
    # them in our vim configurations to be run on save. Unfortunately this
    # makes vim.coc report errors very slowly, or not at all. If we decide to
    # enable them back we should also make sure that they work in our vim configs.
    - gofumpt
    # exhaustivestruct is meant for special checking only. It verifies that
    # all fields are set in struct construction, and so is not useful for us
    - exhaustivestruct
    # we don't believe in wrapping all errors, especially from our interfaces
    - wrapcheck
    # paralleltest seems to think all tests should be parallel. We'll let ginkgo
    # decide that.
    - paralleltest

issues:
  exclude-use-default: true
  exclude-rules:
    - path: _test\.go
      linters:
      - goconst
      - dupl
      - gomnd
      - gochecknoglobals
    - path: _suite_test\.go
      linters:
      - gochecknoglobals
    - path: cmd/simulator/main\.go
      linters:
      - gomnd
    - path: tests/k8s\.go
      linters:
      - gomnd
      - funlen
      - gosec
      - golint
      - stylecheck
    - path: tests/eats/eats_suite_test.go
      linters:
      - gosec
  # Maximum issues count per one linter. Set to 0 to disable.
  max-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable
  max-same: 0

  # Show only new issues
  new: false
